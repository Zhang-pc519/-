12.编写程序，输入一句英语，将句中所有单词的顺序颠倒输出。
void output(int i,char a[][81])
{
	printf("该句颠倒输出： \n");
	for(i--;i>=0;i--)
		printf("%s",a[i]);
	printf("\n");
}
int main()
{
	char i=0,a[81][81],ch;
	printf("请输入一句英语：");
	while(1)
	{
		scanf("%s",a[i]);
		i++;
		ch=getchar();
		if(ch=='\n')
			break;
	}
	output(i,a);
	return 0;
}

13.输入N个字符串，再按降序排列输出。
void sort(char a[N][20],char str[100])
{
	int i,j;
	char tmp[20];
	for(i=0;i<N-1;i++)
	{
		for(j=0;j<N-1-1;j++)
		{
			if(strcmp(a[j],a[j+1])>0)
			{
				strcpy(tmp,a[j]);
					strcpy(a[j],a[j+1]);
					strcpy(a[j+1],tmp);
			}
		}
	}
}
int main()
{
	char a[N][20],str[100]={0};
	int i;
	printf("请输入%d个字符串：\n",N);
	for(i=0;i<N;i++)
	{
		gets(a[i]);
	}
	sort(a,str);
	printf("按降序排列的%d个字符串：\n",N);
	for(i=0;i<N;i++)
	{
		puts(a[i]);
	}
	return 0;
}

14.将用户输入的整数插入到按升序排好序的整数数组中，插入后仍然保持升序。
void insert(int a[],int x)
{
	int i;
	for(i=N-1;i>=0&&a[i]>x;i--)
		a[i+1]=a[i];
	a[i+1]=x;
}
void print(int a[],int n)
{
	int i;
	for(i=0;i<n;i++)
		printf("%d",a[i]);
	printf("\n");
}
int main()
{

	int x,a[N+1]={2,12,18,22,33};
	printf("现按升序排序的整数数组：\n");
	print(a,N);
	printf("请输入待插入的整数：");
	scanf("%d",&x);
	insert(a,x);
	printf("\n插入后按升序排序的整数数组：\n");
	print(a,N+1);
	return 0;
}