写一个函数判断一年是不是闰年。
int is_leap_year(int y)
{
	if((y%4==0&&y%100!=0)||(y%400==0))
		return 1;
	else
		return 0;
}
int main()
{
	int year =0;
	for(year=1000;year<=2000;year++)
	{
		if(is_leap_year(year)==1)
			printf("%d ",year);
	}
	return 0;
}

写一个函数，实现一个整型有序数组的二分查找。
int binary_search(int arr[],int k,int sz)
{
	int left=0;
	int right=sz-1;
	while(left<=right)
	{
		int mid=(left+right)/2;
		if(arr[mid]<k)
		{
			left =mid+1;
		}
		else if(arr[mid]>k)
		{
			right=mid-1;
		}
		else
		{
			return mid;
		}
	}
	return -1;
}
int main()
{
	int arr[]={1,2,3,4,5,6,7,8,9,10};
	int k=7;
	int sz=sizeof(arr)/sizeof(arr[0]);
	int ret=binary_search(arr,k,sz);
	if(ret ==-1)
	{
		printf("找不到指定的数字\n");
	}
	else
	{
		printf("找到了，下标是；%d\n",ret);
	}
	return 0;
}
写一个函数，每调用一次这个函数，就会将num的值增加1.
void Add(int* p)
{
	(*p)++;
}
int main()
{
	int num=0;
	Add(&num);
	printf("num=%d\n",num);//1
	Add(&num);
	printf("num=%d\n",num);//2
	Add(&num);
	printf("num=%d\n",num);//3
	return 0;
}
