1.在含有N个整数的一维数组中找出其中的最小值及下标，
结果在主函数中输出，数组元素的值从键盘输入。
#include<stdio.h>
#define N 5
void Input(int b[N])
{
	//输入N个整数
	int i;
	printf("请输入%d个整数：\n",N);
	for(i=0;i<N;i++)
	{
		scanf("%d",&b[i]);
	}
}
void Min(int b[N],int min[2])
{
	//求最小值及下标
	int i;
	min[0]=b[0];min[1]=0;
	for(i=1;i<N;i++)
	{
		if(b[i]<min[0])
		{
			min[0]=b[i];min[1]=i;
		}
	}
}
int main()
{
	int a[N],min[2];
	Input(a);
	Min(a,min);
	printf("数组元素的最小值为：%d,下标为：%d\n",min[0],min[1]);
	return 0;
}

计算两个m*n矩阵A与B的和C，求的结果在主函数中按矩阵形式输出。
#define M 3
#define N 4
void Sum(int a[M][N],int b[M][N],int c[M][N])
{
	int i,j;
	for(i=0;i<M;i++)
		for(j=0;j<N;j++)
			c[i][j]=a[i][j]+b[i][j];
}
void Input(int b[M][N])
{
	int i,j;
	printf("请输入%d个整数：\n",M*N);
	for(i=0;i<M;i++)
		for(j=0;j<N;j++)
			scanf("%d",&b[i][j]);
}
void Print(int b[M][N])
{
	int i,j;
	for(i=0;i<M;i++)
		for(j=0;j<N;j++)
		{
			printf("%4d\t",b[i][j]);
			printf("\n");
		}
}
int main()
{
	int A[M][N],B[M][N],C[M][N];
	Input(A);
		Input(B);
		Sum(A,B,C);
		printf("矩阵A与B的和为：\n");
		Print(C);
	return 0;
}