//习题12
#include <stdio.h>
int count_bit_one(unsigned int n)
{
	int count =0;
	while(n)
	{
		if(n%2==1)
		{
			count++;
		}
		n=n/2;
	}
	return count;
}
int main()
{
	int a=0;
	scanf("%d",&a);
	//写一个函数求a的二进制（补码）表示中有几个1
	int count=count_bit_one(a);//-1
	//-1
	//10000000000000000000000000000001
	//11111111111111111111111111111110
	//11111111111111111111111111111111

	//13
	//00000000000000000000000000001101
	printf("count=%d\n",count);
	return 0;
}

//习题10
int get_diff_bit(int m,int n)
{
	int tmp=m^n;
	int count=0;
	while(tmp)
	{
		tmp=tmp&(tmp-1);
	}
	return count;
}
int main()
{
	int m=0;
	int n=0;
	scanf("%d%d",&m,&n);
	int count = get_diff_bit(m,n);
	printf("count=%d\n",count);
	return 0;
}

//习题11
void print(int m)
{
	int i=0;
	printf("奇数位:\n");
	for(i=30;i>=0;i-=2)
	{
		printf("%d",(m>>i)&1);
	}
	printf("\n");
	printf("偶数位:\n");
	for(i=31;i>=1;i-=2)
	{
		printf("%d",(m>>i)&1);
	}
	printf("\n");
}
int main()
{
	int m=0;
	scanf("%d",&m);
	print(m);
	return 0;
}

//习题14
void print(int *p,int sz)
{
	int i=0;
	for(i=0;i<sz;i++)
	{
		printf("%d",*(p+1));
	}
}
int main()
{
	int arr[]={1,2,3,4,5,6,7,8,9};
	int sz=sizeof(arr)/sizeof(arr[0]);
	print(arr,sz);
	return 0;
}
